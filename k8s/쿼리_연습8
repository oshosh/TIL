# 데이터베이스 a4가 존재하면 삭제

# 데이터베이스 a4 생성
drop database if exists a4;
create database a4;
# 데이터베이스 a4 선택
use a4;

# 회원 테이블 생성, loginId, loginPw, `name`
## 조건 : loginId 칼럼에 UNIQUE INDEX 없이
CREATE TABLE member (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	PRIMARY KEY(id),
	regDate DATETIME NOT NULL,
	loginId CHAR(50) NOT NULL,
	loginPw VARCHAR(100) NOT NULL,
	name CHAR(100) NOT NULL
);
desc `member`;

# 회원 2명 생성
## 조건 : (loginId = 'user1', loginPw = 'user1', `name` = '홍길동')
## 조건 : (loginId = 'user2', loginPw = 'user2', `name` = '홍길순')
INSERT INTO member
set regDate = NOW(),
loginId = 'user1',
loginPw = 'user1', 
`name` = '홍길동';

INSERT INTO member
set regDate = NOW(),
loginId = 'user2', 
loginPw = 'user2', 
`name` = '홍길순';

SELECT * from member;

# 회원 2배 증가 쿼리만들고 회원이 백만명 넘을 때 까지 반복 실행
## 힌트1 : INSERT INTO `tableName` (col1, col2, col3, col4)
## 힌트2 : SELECT NOW(), UUID(), 'pw', '아무개'
INSERT INTO `member` (regDate, loginId, loginPw, name)
select NOW(), UUID(), 'pw', '아무개'
from member;

# 회원수 확인
select COUNT(*) from member; 

# 검색속도 확인
SELECT * 
from member 
WHERE loginid ='user1'; # 오래걸림..

SELECT *
from `member` 
WHERE id = 11232; # 거의 바로 실행 기본키는 풀스캔를 하지 않고 색인 검색으로 실행함

# 유니크 인덱스를 loginID 칼럼에 걸기
## 설명 : mysql이 loginId의 고속검색을 위한 부가데이터를 자동으로 관리(생성/수정/삭제) 한다.
## 설명 : 이게 있고 없고가, 특정 상황에서 어마어마한 성능차이를 가져온다.
## 설명 : 생성된 인덱스의 이름은 기본적으로 칼럼명과 같다.
ALTER table `member` add unique index(loginId);

## 인덱스 확인
desc `member`;

# 검색속도 확인, loginId 가 'user1' 인 회원 검색
SELECT * 
from member 
WHERE loginid ='user1'; #인덱스 색인을 통해 빠른 검색 가능

# 인덱스 삭제, `loginId` 이라는 이름의 인덱스 삭제
ALTER table member drop index(loginId);

## 인덱스 확인
show index from `member`;
desc `member`;

# 회원 테이블 삭제
drop table `member`;
SELECT * from `member`;

# 회원 테이블을 생성하는데, loginId에 uniqueIndex 까지 걸어주세요.
CREATE table `member` (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,
	PRIMARY KEY(id),
	regDate DATETIME NOT NULL,
	loginId CHAR(50) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	name CHAR(100) NOT NULL
);

## 인덱스 확인
show index from `member`;

# 회원 2명 생성
## 조건 : (loginId = 'user1', loginPw = 'user1', `name` = '홍길동')
## 조건 : (loginId = 'user2', loginPw = 'user2', `name` = '홍길순')
INSERT INTO member
set regDate = NOW(),
loginId = 'user1',
loginPw = 'user1', 
`name` = '홍길동';

INSERT INTO member
set regDate = NOW(),
loginId = 'user2', 
loginPw = 'user2', 
`name` = '홍길순';

SELECT * from member;
# 회원 2배 증가 쿼리만들고 회원이 1만명 넘을 때 까지 반복 실행
## 힌트1 : INSERT INTO `tableName` (col1, col2, col3, col4)
## 힌트2 : SELECT NOW(), UUID(), 'pw', '아무개'
INSERT INTO `member` (regDate, loginId, loginPw, name)
select NOW(), UUID(), 'pw', '아무개'
from member;

# 회원수 확인
SELECT COUNT(*) from `member`;

# 인덱스 쓰는지 확인
## 힌트 : EXPLAIN SELECT * ~
EXPLAIN SELECT *
FROM member
WHERE loginId = 'user1'; # 인덱스를 쓰면 key를 확인하면 됨.


# 인덱스 삭제, `loginId` 이라는 이름의 인덱스 삭제
ALTER TABLE `member` DROP INDEX `loginId`;

## 인덱스 확인
show index from member;

# 인덱스 안쓰는지 확인
## 힌트 : EXPLAIN SELECT * ~
EXPLAIN SELECT *
FROM member
WHERE loginId = 'user1';


# database 전부 제거
drop database if exists a1;
drop database if exists a2;
drop database if exists a3;
drop database if exists a4;
drop database if exists a5;
drop database if exists a6;
